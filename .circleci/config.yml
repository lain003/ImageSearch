version: 2

references:
  yarn_cache: &yarn_cache
    key: v1-js-dep-{{ arch }}-{{ checksum "yarn.lock" }}
    paths:
      - /home/circleci/project/node_modules
  bundler_cache: &bundler_cache
    key: v1-bundler-{{ arch }}-{{ checksum "Gemfile.lock" }}
    paths:
      - /home/circleci/project/vendor/bundler

jobs:
  rspec:
    docker:
      - image: circleci/ruby:2.7.0-buster
        environment:
          DOCKER_API_VERSION: 1.39
    steps:
      - checkout

      - run:
          name: Docker Compose をインストール
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - setup_remote_docker:
          docker_layer_caching: false # 有料プランならtrue

      - restore_cache:
          <<: *bundler_cache
          <<: *yarn_cache

      - run:
          name: docker-compose up
          command: |
            docker-compose up -d image_search elastic_search_test

      - run:
          name: 下準備
          command: |
            docker cp . project_image_search_1:/home/imagesearch
            docker-compose exec image_search sh -c "cd /home/imagesearch && bundle install"
            docker-compose exec image_search sh -c "cd /home/imagesearch && yarn install --frozen-lockfile"
            mkdir /tmp/test-results
            curl -o wnjpn.db.gz http://compling.hss.ntu.edu.sg/wnja/data/1.1/wnjpn.db.gz
            gzip -d wnjpn.db.gz
            docker cp wnjpn.db project_image_search_1:/home/imagesearch/db/wnjpn.sqlite3
            echo $GCLOUD_SERVICE_KEY | tr -d ' ' | base64 --decode > tmp/googleapikey.json
            docker cp tmp/googleapikey.json project_image_search_1:/home/imagesearch/vendor/gcs/googleapikey.json
            docker cp project_image_search_1:/home/imagesearch/vendor/bundler vendor/bundler
            docker cp project_image_search_1:/home/imagesearch/node_modules node_modules
      - save_cache:
          <<: *bundler_cache
          <<: *yarn_cache
      - run:
          name: テスト実行
          command: |
            docker-compose exec image_search sh -c "cd /home/imagesearch && bundle exec rspec --format progress --format RspecJunitFormatter --out /tmp/test-results/rspec.xml"
            docker cp project_image_search_1:/tmp/test-results/rspec.xml /tmp/test-results/rspec.xml

      - store_test_results:
          path: /tmp/test-results/rspec.xml

#      - store_artifacts:
#          path: ~/rspec
#
#      - store_artifacts:
#          path: ~/project/tmp/screenshots
#


workflows:
  version: 2
  test:
    jobs:
      - rspec